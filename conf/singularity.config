def checkProfileSingularity(path){
    if (new File(path).exists()){
        File directory = new File(path)
        def contents = []
        directory.eachFileRecurse (groovy.io.FileType.FILES) { file -> contents << file }
        if (!path?.trim() || contents == null || contents.size() == 0){
            println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
            System.exit(-1)
        }
    }else{
        println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
        System.exit(-1)
    }
}

singularity {
    enabled = true
    autoMounts = true
    runOptions = "${params.geniac.containers.singularityRunOptions}"
}

process {
    checkProfileSingularity("${params.geniac.singularityImagePath}")
    withLabel:tabix { container = "${params.geniac.singularityImagePath}/tabix.simg" }
    withLabel:samtools { container = "${params.geniac.singularityImagePath}/samtools.simg" }
    withLabel:bedtools { container = "${params.geniac.singularityImagePath}/bedtools.simg" }
    withLabel:polym { container = "${params.geniac.singularityImagePath}/polym.simg" }
    withLabel:sambamba { container = "${params.geniac.singularityImagePath}/sambamba.simg" }
    withLabel:manta { container = "${params.geniac.singularityImagePath}/manta.simg" }
    withLabel:onlyLinux { container = "${params.geniac.singularityImagePath}/onlylinux.simg" }
    withLabel:gatk { container = "${params.geniac.singularityImagePath}/gatk.simg" }
    withLabel:picard { container = "${params.geniac.singularityImagePath}/picard.simg" }
    withLabel:bwa { container = "${params.geniac.singularityImagePath}/bwa.simg" }
    withLabel:preseq { container = "${params.geniac.singularityImagePath}/preseq.simg" }
    withLabel:bcftools { container = "${params.geniac.singularityImagePath}/bcftools.simg" }
    withLabel:snpeff { container = "${params.geniac.singularityImagePath}/snpeff.simg" }
    withLabel:ascat { container = "${params.geniac.singularityImagePath}/ascat.simg" }
    withLabel:fastqc { container = "${params.geniac.singularityImagePath}/fastqc.simg" }
    withLabel:python { container = "${params.geniac.singularityImagePath}/python.simg" }
    withLabel:multiqc { container = "${params.geniac.singularityImagePath}/multiqc.simg" }
    withLabel:mosdepth { container = "${params.geniac.singularityImagePath}/mosdepth.simg" }
}
